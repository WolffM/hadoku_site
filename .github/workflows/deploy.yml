name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@wolffm'
      
      - name: Create scoped .npmrc for GitHub Packages
        run: |
          echo "@wolffm:registry=https://npm.pkg.github.com" > ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.DEPLOY_PACKAGE_TOKEN }}" >> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc
          echo "loglevel=error" >> ~/.npmrc
      
      - name: Sanity check token scopes (redacted)
        env:
          TOKEN: ${{ secrets.DEPLOY_PACKAGE_TOKEN }}
        run: |
          if [ -z "$TOKEN" ]; then echo "❌ DEPLOY_PACKAGE_TOKEN is empty"; exit 1; fi
          # Query GitHub API to read scopes without printing token
          headers=$(curl -s -D - -o /dev/null -H "Authorization: token $TOKEN" https://api.github.com/user | tr -d '\r')
          echo "$headers" | grep -i '^x-oauth-scopes:' || { echo '⚠️ Could not read OAuth scopes header'; }
          # Accept either read:packages or write:packages (write includes read permissions)
          if echo "$headers" | grep -i '^x-oauth-scopes:' | grep -qiE 'read:packages|write:packages'; then
            echo "✓ Token has packages scope"
          else
            echo '❌ Token missing read:packages or write:packages scope'
            exit 1
          fi
          # Minimal registry probe (will 404 but should authenticate)
          status=$(curl -s -o /dev/null -w '%{http_code}' -H "Authorization: Bearer $TOKEN" https://npm.pkg.github.com/@wolffm)
          echo "Registry probe HTTP $status (expected 200/401/404; 401 means auth failure)"
          if [ "$status" = "401" ]; then echo '❌ Registry auth failed with provided token'; exit 1; fi
      
      - name: Install dependencies (private packages)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.DEPLOY_PACKAGE_TOKEN }}
        run: npm ci --no-audit --no-fund

      - name: Update task micro-frontend bundle
        env:
          NODE_AUTH_TOKEN: ${{ secrets.DEPLOY_PACKAGE_TOKEN }}
        run: npm run update-task-bundle
      
      - name: Debug environment variables
        env:
          PUBLIC_ADMIN_KEY: ${{ secrets.ADMIN_KEY }}
          PUBLIC_FRIEND_KEY: ${{ secrets.FRIEND_KEY }}
        run: |
          echo "PUBLIC_ADMIN_KEY set? ${PUBLIC_ADMIN_KEY:+yes}"
          echo "PUBLIC_FRIEND_KEY set? ${PUBLIC_FRIEND_KEY:+yes}"
          if [ -z "$PUBLIC_ADMIN_KEY" ] || [ -z "$PUBLIC_FRIEND_KEY" ]; then
            echo "❌ Missing required secrets (ADMIN_KEY or FRIEND_KEY)."
            exit 1
          fi

      - name: Generate registry (uses prebuild hook)
        env:
          MODE: production
        run: npm run generate-registry

      - name: Build with Astro
        env:
          HADOKU_SITE_TOKEN: ${{ secrets.HADOKU_SITE_TOKEN }}
          PUBLIC_ADMIN_KEY: ${{ secrets.ADMIN_KEY }}
          PUBLIC_FRIEND_KEY: ${{ secrets.FRIEND_KEY }}
          MODE: production
        run: npm run build
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
