name: Update Watchparty UI Package

on:
  repository_dispatch:
    types: [watchparty_ui_updated]
  workflow_dispatch:

permissions:
  contents: write
  packages: read

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.HADOKU_SITE_TOKEN }}
      
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Create .npmrc for GitHub Packages
        run: |
          echo "@wolffm:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.DEPLOY_PACKAGE_TOKEN }}" >> .npmrc
      
      - name: Update watchparty package
        run: |
          PACKAGE="${{ github.event.client_payload.package || '@wolffm/watchparty-ui' }}"
          echo "📦 Updating $PACKAGE to latest version..."
          
          # Update root package (workspace root)
          pnpm add -w $PACKAGE@latest
          echo "✅ Updated root package.json and pnpm-lock.yaml"
          
          # Update watchparty bundle (copies dist files to public/mf/watchparty/)
          echo "📦 Updating watchparty micro-frontend bundle..."
          pnpm run update-watchparty-bundle
          echo "✅ Updated public/mf/watchparty/ bundle files"
          
          # Regenerate registry with new version numbers for cache busting
          echo "📦 Regenerating registry with cache-busting version..."
          pnpm run generate-registry
          echo "✅ Updated public/mf/registry.json with new versions"
      
      - name: Commit and push if changed
        id: commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Check if any package files or bundle files changed
          if git diff --quiet package.json pnpm-lock.yaml public/mf/; then
            echo "ℹ️  No package updates needed"
            echo "updated=false" >> $GITHUB_OUTPUT
          else
            PACKAGE="${{ github.event.client_payload.package || '@wolffm/watchparty-ui' }}"
            git add package.json pnpm-lock.yaml public/mf/
            git commit -m "chore: update $PACKAGE to latest"
            git push
            echo "✅ Updated package and pushed changes"
            echo "updated=true" >> $GITHUB_OUTPUT
            
            # Save new version for summary
            NEW_VERSION=$(node -p "require('./package.json').dependencies['@wolffm/watchparty-ui']")
            echo "new-version=$NEW_VERSION" >> $GITHUB_ENV
          fi
      
      - name: Comment with update info
        if: steps.commit.outputs.updated == 'true'
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            // Get the latest commit (the one we just pushed)
            const { data: commits } = await github.rest.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            const latestCommit = commits[0].sha;
            
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: latestCommit,
              body: `## 🔄 Watchparty UI Package Updated
            
            **Package Update**
            - Package: \`@wolffm/watchparty-ui\`
            - New version: \`${{ env.new-version }}\`
            
            **Updated Files**
            - \`package.json\` and \`pnpm-lock.yaml\`
            - \`public/mf/watchparty/\` bundle files
            - \`public/mf/registry.json\` with cache-busting version
            
            🚀 Deployment workflows will be triggered automatically.`
            });
      
      - name: Trigger deployment
        if: success()
        run: |
          echo "🚀 Watchparty package update complete. Deployment workflows will be triggered automatically."
