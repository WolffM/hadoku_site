name: Deploy Cloudflare Workers

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches:
      - main
    paths:
      - 'workers/**'
      - '.github/workflows/deploy-workers.yml'
  repository_dispatch:
    types: [config_updated, deploy_workers]

jobs:
  deploy-edge-router:
    name: Deploy Edge Router
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Create .npmrc for GitHub Packages (root for pnpm)
        run: |
          echo "@wolffm:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.DEPLOY_PACKAGE_TOKEN }}" >> .npmrc
      
      - name: Install dependencies (including workspace deps)
        run: pnpm install --filter edge-router...
      
      - name: Deploy to Cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          ROUTE_CONFIG: ${{ secrets.ROUTE_CONFIG }}
        run: |
          # Deploy using pnpm exec so workspace deps are resolved
          pnpm --filter edge-router exec wrangler deploy --var ROUTE_CONFIG:"$ROUTE_CONFIG"
  
  deploy-task-api:
    name: Deploy Task API Worker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Create .npmrc for GitHub Packages (root for pnpm)
        run: |
          echo "@wolffm:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.DEPLOY_PACKAGE_TOKEN }}" >> .npmrc
      
      - name: Install dependencies (including workspace deps)
        run: pnpm install --filter task-api...
      
      - name: Deploy to Cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          echo "🚀 Step 1: Deploying worker..."
          pnpm --filter task-api exec wrangler deploy
          echo "✅ Worker deployed successfully"
          
          echo ""
          echo "🔐 Step 2: Updating secrets (requires worker to be deployed first)..."
          
          if [ -n "${{ secrets.ADMIN_KEYS }}" ]; then
            echo "  📝 Updating ADMIN_KEYS..."
            echo "${{ secrets.ADMIN_KEYS }}" | pnpm --filter task-api exec wrangler secret put ADMIN_KEYS
            echo "  ✅ ADMIN_KEYS updated"
          else
            echo "  ⚠️  ADMIN_KEYS secret not found in GitHub Secrets"
          fi
          
          if [ -n "${{ secrets.FRIEND_KEYS }}" ]; then
            echo "  📝 Updating FRIEND_KEYS..."
            echo "${{ secrets.FRIEND_KEYS }}" | pnpm --filter task-api exec wrangler secret put FRIEND_KEYS
            echo "  ✅ FRIEND_KEYS updated"
          else
            echo "  ⚠️  FRIEND_KEYS secret not found in GitHub Secrets"
          fi
          
          if [ -n "${{ secrets.TASK_GITHUB_TOKEN }}" ]; then
            echo "  📝 Updating GITHUB_PAT..."
            echo "${{ secrets.TASK_GITHUB_TOKEN }}" | pnpm --filter task-api exec wrangler secret put GITHUB_PAT
            echo "  ✅ GITHUB_PAT updated"
          else
            echo "  ⚠️  TASK_GITHUB_TOKEN secret not found in GitHub Secrets"
          fi
          
          echo ""
          echo "🎉 Deployment and secret updates complete!"
