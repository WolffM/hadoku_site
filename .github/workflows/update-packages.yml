name: Update Packages

on:
  repository_dispatch:
    types: [packages_updated]

permissions:
  contents: write

jobs:
  update-packages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.HADOKU_SITE_TOKEN }}

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Configure npm authentication
        run: |
          echo "@wolffm:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.DEPLOY_PACKAGE_TOKEN }}" >> .npmrc
          echo "always-auth=true" >> .npmrc

      - name: Update packages
        id: update
        run: |
          PACKAGES='${{ toJSON(github.event.client_payload.packages) }}'
          echo "Packages to update: $PACKAGES"
          
          UPDATED=""
          for pkg in $(echo "$PACKAGES" | jq -r '.[]'); do
            echo "Updating $pkg..."
            pnpm update "$pkg@latest"
            UPDATED="$UPDATED $pkg"
          done
          
          echo "updated_packages=$UPDATED" >> $GITHUB_OUTPUT

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet pnpm-lock.yaml package.json; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push if changed
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pnpm-lock.yaml package.json
          git commit -m "chore: update packages${{ steps.update.outputs.updated_packages }}" -m "Triggered by repository_dispatch" -m "SHA: ${{ github.event.client_payload.sha }}"
          git push

      - name: Summary
        run: |
          if [ "${{ steps.check_changes.outputs.changed }}" == "true" ]; then
            echo " Updated packages:${{ steps.update.outputs.updated_packages }}"
          else
            echo "ℹ No package updates needed"
          fi
