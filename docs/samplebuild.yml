name: Build and Deploy Task App

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'vite.config.ts'
      - 'tsconfig.json'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application (client and server)
        run: npm run build:all
      
      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "❌ Error: Build output directory 'dist' not found!"
            exit 1
          fi

          # Verify client build
          if [ ! -f "dist/index.js" ]; then
            echo "❌ Error: dist/index.js was not created"
            exit 1
          fi

          if [ ! -s "dist/index.js" ]; then
            echo "❌ Error: dist/index.js is empty"
            exit 1
          fi

          if [ ! -f "dist/style.css" ]; then
            echo "❌ Error: dist/style.css was not created"
            exit 1
          fi

          if [ ! -s "dist/style.css" ]; then
            echo "❌ Error: dist/style.css is empty"
            exit 1
          fi

          # Verify server build
          if [ ! -d "dist/server" ]; then
            echo "❌ Error: dist/server directory was not created"
            exit 1
          fi

          if [ ! -f "dist/server/router.js" ]; then
            echo "❌ Error: dist/server/router.js was not created"
            exit 1
          fi

          if [ ! -s "dist/server/router.js" ]; then
            echo "❌ Error: dist/server/router.js is empty"
            exit 1
          fi

          echo "✅ Client build output found:"
          ls -la dist/*.js dist/*.css
          echo ""
          echo "✅ Server build output found:"
          ls -la dist/server/
      
      - name: Push built files to parent repository
        env:
          HADOKU_SITE_TOKEN: ${{ secrets.HADOKU_SITE_TOKEN }}
        run: |
          echo "Pushing built files to hadoku_site..."
          if [ -z "$HADOKU_SITE_TOKEN" ]; then
            echo "❌ Error: HADOKU_SITE_TOKEN secret is not available."
            exit 1
          fi

          # Clone parent repository
          git clone https://${{ secrets.HADOKU_SITE_TOKEN }}@github.com/WolffM/hadoku_site.git parent
          cd parent
          
          # Create target directories if they don't exist
          mkdir -p public/mf/task
          mkdir -p api/apps/task
          mkdir -p functions/task/lib
          
          # Remove old build files and copy new ones
          
          # Copy client build to public/mf/task/
          echo "📦 Copying client build to public/mf/task/..."
          rm -rf public/mf/task/*
          cp -r ../dist/index.js ../dist/style.css public/mf/task/
          
          # Copy server build to api/apps/task/ (for local development)
          echo "📦 Copying server build to api/apps/task/..."
          rm -rf api/apps/task/*
          cp -r ../dist/server/* api/apps/task/
          cp ../package.json api/apps/task/
          
          # Copy server build to functions/task/lib/ (for Cloudflare Pages Functions)
          echo "📦 Copying server build to functions/task/lib/..."
          rm -rf functions/task/lib/*
          cp -r ../dist/server/* functions/task/lib/
          
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Commit and push changes
          git add public/mf/task/ api/apps/task/ functions/task/lib/
          if git diff --staged --quiet; then
            echo "✅ No changes to commit - build output is identical"
            echo "CHANGES_MADE=false" >> $GITHUB_ENV
          else
            git commit -m "chore: update task app (client + server) from ${{ github.sha }}"
            git push
            echo "✅ Successfully pushed task app to hadoku_site"
            echo "  - Client: public/mf/task/"
            echo "  - Server (local): api/apps/task/"
            echo "  - Server (Cloudflare): functions/task/lib/"
            echo "CHANGES_MADE=true" >> $GITHUB_ENV
          fi
      
      - name: Trigger parent site deployment
        if: env.CHANGES_MADE == 'true'
        env:
          HADOKU_SITE_TOKEN: ${{ secrets.HADOKU_SITE_TOKEN }}
        run: |
          echo "Triggering hadoku_site deployment..."
          
          payload=$(cat <<EOF
            {
              "event_type": "task_updated",
              "client_payload": {
                "sha": "${{ github.sha }}",
                "ref": "${{ github.ref }}"
              }
            }
          EOF
          )

          response_file=$(mktemp)
          trap 'rm -f "$response_file"' EXIT

          status_code=$(curl -sS \
            -o "$response_file" \
            -w "%{http_code}" \
            -X POST "https://api.github.com/repos/WolffM/hadoku_site/dispatches" \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $HADOKU_SITE_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -d "$payload")

          if [ "$status_code" != "204" ]; then
            echo "❌ Failed to trigger hadoku_site deployment (HTTP $status_code)"
            cat "$response_file"
            rm -f "$response_file"
            exit 1
          fi

          echo "✅ Triggered hadoku_site deployment"
          rm -f "$response_file"
