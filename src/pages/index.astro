---
import Base from '../layouts/Base.astro';
import { appVisibility } from '../config/access-control';

// App metadata for display
const appInfo: Record<string, { title: string; description: string; icon: string }> = {
  home: {
    title: 'Home',
    description: 'Main landing page',
    icon: 'üè†'
  },
  watchparty: {
    title: 'Watch Party',
    description: 'Synchronized video watching with friends',
    icon: 'üé¨'
  },
  task: {
    title: 'Task Manager',
    description: 'Track and manage your tasks',
    icon: '‚úÖ'
  },
  contact: {
    title: 'Contact',
    description: 'Get in touch',
    icon: 'üìß'
  },
  herodraft: {
    title: 'Hero Draft',
    description: 'Draft your team',
    icon: 'üéÆ'
  }
};
---

<Base title="Hadoku - Home">
  <div class="container">
    <header class="header">
      <h1>Hadoku</h1>
      <p class="subtitle">Your Personal Micro-Frontend Hub</p>
      <div class="access-badge" data-type="public">
        üë§ Public Access
      </div>
    </header>

    <div class="apps-grid" id="apps-grid">
      <!-- Apps will be populated by client-side script -->
    </div>

    <div class="access-info" id="access-info">
      <p>üëã Welcome! Some apps require special access.</p>
      <p>Contact the admin for access keys.</p>
    </div>
  </div>

  <script define:vars={{ 
    appInfo, 
    appVisibility,
    adminKey: import.meta.env.PUBLIC_ADMIN_KEY || 'default-admin-key',
    friendKey: import.meta.env.PUBLIC_FRIEND_KEY || 'default-friend-key'
  }}>
    // Get access key from URL
    const params = new URLSearchParams(window.location.search);
    const key = params.get('key');
    
    // Access configuration (from build-time env vars)
    const ADMIN_KEY = adminKey;
    const FRIEND_KEY = friendKey;
    
    // Determine user type based on key
    let userType = 'public';
    if (key === ADMIN_KEY) {
      userType = 'admin';
    } else if (key === FRIEND_KEY) {
      userType = 'friend';
    }
    
    // Update access badge
    const badge = document.querySelector('.access-badge');
    if (badge) {
      badge.setAttribute('data-type', userType);
      if (userType === 'admin') {
        badge.textContent = 'üëë Admin Access';
      } else if (userType === 'friend') {
        badge.textContent = 'üë• Friend Access';
      } else {
        badge.textContent = 'üë§ Public Access';
      }
    }
    
    // Get accessible apps for this user type
    const accessibleApps = appVisibility[userType] || ['home'];
    
    // Populate apps grid
    const appsGrid = document.getElementById('apps-grid');
    if (appsGrid) {
      const appsToShow = accessibleApps.filter(app => app !== 'home');
      
      appsGrid.innerHTML = appsToShow.map(app => {
        const info = appInfo[app] || { title: app, description: 'No description', icon: 'üì¶' };
        const href = `/${app}${key ? `?key=${key}` : ''}`;
        
        return `
          <a href="${href}" class="app-card">
            <div class="app-icon">${info.icon}</div>
            <h3>${info.title}</h3>
            <p>${info.description}</p>
          </a>
        `;
      }).join('');
    }
    
    // Show/hide access info based on user type
    const accessInfo = document.getElementById('access-info');
    if (accessInfo) {
      if (userType === 'public') {
        accessInfo.style.display = 'block';
      } else {
        accessInfo.style.display = 'none';
      }
    }
  </script>

  <style is:global>
    /* Use global styles for dynamically created elements */
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
      min-height: 100vh;
    }

    .header {
      text-align: center;
      margin-bottom: 3rem;
    }

    .header h1 {
      font-size: 3rem;
      margin-bottom: 0.5rem;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .subtitle {
      font-size: 1.25rem;
      color: #666;
      margin-bottom: 1rem;
    }

    .access-badge {
      display: inline-block;
      padding: 0.5rem 1rem;
      border-radius: 2rem;
      font-size: 0.875rem;
      font-weight: 600;
    }

    .access-badge[data-type="admin"] {
      background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
      color: white;
    }

    .access-badge[data-type="friend"] {
      background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
      color: white;
    }

    .access-badge[data-type="public"] {
      background: #f0f0f0;
      color: #666;
    }

    .apps-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 1.5rem;
      margin-bottom: 2rem;
    }

    .app-card {
      background: white;
      border: 2px solid #e0e0e0;
      border-radius: 1rem;
      padding: 2rem;
      text-decoration: none;
      color: inherit;
      transition: all 0.3s ease;
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
    }

    .app-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);
      border-color: #667eea;
    }

    .app-icon {
      font-size: 3rem;
      margin-bottom: 1rem;
    }

    .app-card h3 {
      margin: 0 0 0.5rem 0;
      font-size: 1.5rem;
    }

    .app-card p {
      margin: 0;
      color: #666;
      font-size: 0.875rem;
    }

    .access-info {
      text-align: center;
      padding: 2rem;
      background: #f8f9fa;
      border-radius: 1rem;
      color: #666;
    }

    .access-info p {
      margin: 0.5rem 0;
    }
  </style>
</Base>
