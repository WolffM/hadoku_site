---
import Base from '../layouts/Base.astro';
import { appVisibility } from '../config/access-control';

// App metadata for display
const appInfo: Record<string, { title: string; description: string; icon: string }> = {
  home: {
    title: 'Home',
    description: 'Main landing page',
    icon: 'üè†'
  },
  watchparty: {
    title: 'Watch Party',
    description: 'Synchronized video watching with friends',
    icon: 'üé¨'
  },
  task: {
    title: 'Task Manager',
    description: 'Track and manage your tasks',
    icon: '‚úÖ'
  },
  contact: {
    title: 'Contact',
    description: 'Get in touch',
    icon: 'üìß'
  },
  herodraft: {
    title: 'Hero Draft',
    description: 'Draft your team',
    icon: 'üéÆ'
  }
};
---

<Base title="Hadoku - Home">
  <div class="max-w-screen-xl mx-auto px-8 min-h-screen">
    <header class="text-center mb-12 pt-12">
      <h1 class="text-5xl font-bold mb-2 bg-gradient-to-br from-primary to-primary-dark bg-clip-text text-transparent border-b-4 border-transparent pb-2 inline-block">
        Hadoku
      </h1>
      <p class="text-xl text-text-secondary">
        Your Personal Micro-Frontend Hub
      </p>
    </header>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8" id="apps-grid">
      <!-- Apps will be populated by client-side script -->
    </div>

    <div class="text-center p-8 bg-neutral-lighter rounded-lg text-text-muted hidden" id="access-info">
      <p>üëã Welcome! Some apps require special access.</p>
      <p>Contact the admin for access keys.</p>
    </div>
  </div>

  <script define:vars={{ 
    appInfo, 
    appVisibility,
    adminKey: import.meta.env.PUBLIC_ADMIN_KEY || 'default-admin-key',
    friendKey: import.meta.env.PUBLIC_FRIEND_KEY || 'default-friend-key'
  }}>
    // Get access key from URL
    const params = new URLSearchParams(window.location.search);
    const key = params.get('key');
    
    // Access configuration (from build-time env vars)
    const ADMIN_KEY = adminKey;
    const FRIEND_KEY = friendKey;
    
    // Determine user type based on key
    let userType = 'public';
    if (key === ADMIN_KEY) {
      userType = 'admin';
    } else if (key === FRIEND_KEY) {
      userType = 'friend';
    }
    
    // Apply visual theme based on user type (without exposing key)
    document.body.setAttribute('data-user-type', userType);
    
    // Get accessible apps for this user type
    const accessibleApps = appVisibility[userType] || ['home'];
    
    // Populate apps grid
    const appsGrid = document.getElementById('apps-grid');
    if (appsGrid) {
      const appsToShow = accessibleApps.filter(app => app !== 'home');
      
      appsGrid.innerHTML = appsToShow.map(app => {
        const info = appInfo[app] || { title: app, description: 'No description', icon: 'üì¶' };
        const href = `/${app}${key ? `?key=${key}` : ''}`;
        
        return `
          <a href="${href}" class="app-card bg-bg-card border-2 border-border rounded-lg p-8 no-underline text-inherit transition-all duration-smooth flex flex-col items-center text-center hover:-translate-y-1 hover:shadow-md hover:border-primary">
            <div class="text-5xl mb-4">${info.icon}</div>
            <h3 class="text-2xl font-semibold mb-2">${info.title}</h3>
            <p class="text-text-muted text-sm">${info.description}</p>
          </a>
        `;
      }).join('');
    }
    
    // Hide access info (everyone can see all basic apps now)
    const accessInfo = document.getElementById('access-info');
    if (accessInfo) {
      accessInfo.style.display = 'none';
    }
  </script>

  <style>
    /* Visual indicators based on user type - no text exposed */
    :global(body[data-user-type="friend"] .text-transparent) {
      border-bottom-color: var(--color-success); /* Blue trim for friend */
    }
    
    :global(body[data-user-type="admin"] .text-transparent) {
      border-bottom-color: var(--color-danger); /* Purple/Pink trim for admin */
    }
    
    /* Subtle card border colors based on user type */
    :global(body[data-user-type="friend"] .app-card) {
      border-color: rgba(14, 165, 233, 0.3); /* Light blue for friend */
    }
    
    :global(body[data-user-type="friend"] .app-card:hover) {
      border-color: var(--color-success);
      box-shadow: 0 12px 24px rgba(14, 165, 233, 0.2);
    }
    
    :global(body[data-user-type="admin"] .app-card) {
      border-color: rgba(192, 132, 252, 0.3); /* Light purple for admin */
    }
    
    :global(body[data-user-type="admin"] .app-card:hover) {
      border-color: var(--color-danger);
      box-shadow: 0 12px 24px rgba(192, 132, 252, 0.2);
    }
  </style>
</Base>
